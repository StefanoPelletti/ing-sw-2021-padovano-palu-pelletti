package it.polimi.ingsw.networking.message.updateMessages.middlesUpdate;

import it.polimi.ingsw.client.cli.UpdateHandler;
import it.polimi.ingsw.networking.message.Message;
import it.polimi.ingsw.networking.message.MessageType;
import it.polimi.ingsw.networking.message.updateMessages.UpdateMessage;
import it.polimi.ingsw.server.model.LeaderCard;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class MSG_UPD_LeaderCardsPicker extends UpdateMessage implements Serializable {

    private final boolean enabled;
    private final List<LeaderCard> cards;

    /**
     * MSG_UPD_LeaderCardsPicker is sent by the ClientHandler to the Client.
     * It is generated by a model.middles.LeaderCardsPicker generateMessage().
     * It contains the 4 cards the player has to pick to begin the game.
     * Its usage is best described in the Documentation files, Action and DisconnectionReconnection.
     * @param enabled If true, the currentPlayer must resolve this object as a priority.
     * @param cards The List containing the 4 initial Leader Cards.
     * @see it.polimi.ingsw.server.model.middles.LeaderCardsPicker;
     */
    public MSG_UPD_LeaderCardsPicker(boolean enabled, List<LeaderCard> cards) {
        super(MessageType.MSG_UPD_LeaderCardsPicker);

        this.enabled = enabled;
        this.cards = new ArrayList<>(cards);
    }

    public boolean getEnabled() {
        return this.enabled;
    }

    public List<LeaderCard> getCards() {
        return this.cards;
    }

    @Override
    public void executeCLI(UpdateHandler updateHandler) {
        updateHandler.updateLeaderCardPicker(this);
    }

    @Override
    public void executeGUI() {

    }
}