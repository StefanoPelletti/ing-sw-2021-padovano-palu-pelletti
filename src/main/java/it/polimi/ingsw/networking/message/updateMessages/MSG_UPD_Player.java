package it.polimi.ingsw.networking.message.updateMessages;

import it.polimi.ingsw.client.cli.UpdateHandler;
import it.polimi.ingsw.networking.message.MessageType;
import it.polimi.ingsw.server.model.LeaderCard;

import java.io.Serializable;

public class MSG_UPD_Player extends UpdateMessage implements Serializable {

    private final int vp;
    private final int playerNumber;
    private final String nickname;
    private final int position;
    private final LeaderCard[] leaderCards;

    /**
     * MSG_UPD_Player is sent by the ClientHandler to the Client.
     * It is generated by a model.Player generateMessage().
     * It contains the internal status of the Player identified by his nickname or playerNumber.
     *
     * @param vp           The victory points of the player.
     * @param playerNumber The number of the player.
     * @param nickname     The name of the player.
     * @param position     The player position on the FaithTrack.
     * @param leaderCards  A 2-cell array containing his Leader Card (or null if there's none).
     */
    public MSG_UPD_Player(int vp, int playerNumber, String nickname, int position, LeaderCard[] leaderCards) {
        super(MessageType.MSG_UPD_Player);
        this.vp = vp;
        this.playerNumber = playerNumber;
        this.nickname = nickname;
        this.position = position;
        this.leaderCards = new LeaderCard[2];
        System.arraycopy(leaderCards, 0, this.leaderCards, 0, 2);
    }

    public int getVp() {
        return this.vp;
    }

    public int getPlayerNumber() {
        return this.playerNumber;
    }

    public String getNickname() {
        return this.nickname;
    }

    public int getPosition() {
        return this.position;
    }

    public LeaderCard[] getLeaderCards() {
        return this.leaderCards;
    }

    @Override
    public void executeCLI(UpdateHandler updateHandler) {
        updateHandler.updatePlayer(this);
    }

    @Override
    public void executeGUI() {

    }
}